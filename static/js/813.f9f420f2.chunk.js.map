{"version":3,"file":"static/js/813.f9f420f2.chunk.js","mappings":"yNAuCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMH,GAAN,wFACSI,EAAAA,EAAAA,IAAiBC,OAAOL,IADjC,OACRM,EADQ,OAGdP,EAAWO,EAASC,KAAKC,SAHX,2CAAH,sDAMbL,EAAQH,EACT,GAAE,CAACA,KAGF,gCACsB,IAAnBF,EAAQW,SAAgB,oEAExBX,EAAQW,OAAS,IAChB,0BACE,wBACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJb,EADQ,UAW9B,C","sources":["components/Additional/Reviews.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'API/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getData = async id => {\n      const response = await getMoviesReviews(Number(id));\n\n      setReviews(response.data.results);\n    };\n\n    getData(id);\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n\n      {reviews.length > 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","getData","getMoviesReviews","Number","response","data","results","length","map","review","author","content"],"sourceRoot":""}